.. _us.census.acs.B11001002:

Family Households
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

A family consists of a householder and one or more other people living in the same household who are related to the householder by birth, marriage, or adoption. All people in a household who are related to the householder are regarded as members of his or her family. A family household may contain people not related to the householder, but those people are not included as part of the family of the householder in tabulations. Thus, the number of family households is equal to the number of families, but family households may include more members than do families. A household can contain only one family for purposes of tabulations. Not all households contain families since a household may be comprised of a group of unrelated people or of one person living alone -- these are called nonfamily households. Families are classified by type as either a "married couple family" or "other family" according to the sex of the householder and the presence of relatives. The data on family type are based on answers to questions on sex and relationship that were asked of all people.











.. tabs::



   
   .. tab:: {"tab_name": "Per Households"}

      Update a field of a table with an estimate of "Family Households" per Households for a polygon
      using a combination of weighting by area and Households.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "us.census.acs.B11001002",
              "denom_id": "us.census.acs.B11001001",
              "normalization": "denominated"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Family Households" per Households for a polygon
      using a combination of weighting by area and Households.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(-73.9, 40.7), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "us.census.acs.B11001002",
               "denom_id": "us.census.acs.B11001001",
               "normalization": "denominated"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS family_households_rate_2015_2015
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))

   




   .. tab:: {"tab_name": "Per sq km"}

      Update a field of a table with an estimate of "Family Households" per square kilometer using area
      weighted interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "us.census.acs.B11001002",
              "normalization": "areaNormalized"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Family Households" per square kilometer using area
      weighted interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(-73.9, 40.7), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "us.census.acs.B11001002",
               "normalization": "areaNormalized"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS family_households_per_sq_km_2015_2015
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))

   .. tab:: {"tab_name": "Raw count"}

      Update a field of a table with an estimate of "Family Households" for a polygon using area-weighted
      interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "us.census.acs.B11001002",
              "normalization": "predenominated"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Family Households" for a polygon using area-weighted
      interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(-73.9, 40.7), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "us.census.acs.B11001002",
               "normalization": "predenominated"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS family_households_2015_2015
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))









Boundaries
~~~~~~~~~~

.. raw:: html

  <table border="1" class="docutils">
  <thead valign="bottom">
  <tr class="row-odd"><th class="head">Boundary</th>
  <th class="head">Time (default is latest)</th>
  </tr>
  </thead>
  <tbody valign="top">


  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.school_district_secondary`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.state_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.puma_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.county`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.school_district_elementary`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.school_district_elementary_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.place_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.congressional_district`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.place`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.congressional_district_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.school_district_unified_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.puma`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.cbsa`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.cbsa_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.county_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.state`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.school_district_secondary_clipped`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`us.census.tiger.school_district_unified`

.. raw:: html

  </td>
  <td>

2015 - 2015

.. raw:: html

  </td>

  

.. raw:: html

  </tr>
  </tbody>
  </table>




Related columns
~~~~~~~~~~~~~~~
    
      * :ref:`us.census.acs.B11001001`
    



Source
~~~~~~
    
      * :ref:`us.census.acs.acs`
    



License
~~~~~~~
    
      * :ref:`tags.no-restrictions`
    