.. _us.census.tiger.block:

US Census Blocks
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Census blocks are statistical areas bounded by visible features, such as streets, roads, streams, and railroad tracks, and by nonvisible boundaries, such as selected property lines and city, township, school district, and county limits and short line-of-sight extensions of streets and roads. Generally, census blocks are small in area; for example, a block in a city bounded on all sides by streets. Census blocks in suburban and rural areas may be large, irregular, and bounded by a variety of features, such as roads, streams, and transmission lines. In remote areas, census blocks may encompass hundreds of square miles. Census blocks cover the entire territory of the United States, Puerto Rico, and the Island Areas. Census blocks nest within all other tabulated census geographic entities and are the basis for all tabulated data.











.. tabs::

   .. tab:: {"tab_name": "Boundaries within polygon"}
      Insert all  "US Census Blocks" geometries into another table:

      .. code-block:: postgresql

          INSERT INTO <table_to_update> (cartodb_id, the_geom, name, the_geom_webmercator)
          SELECT ROW_NUMBER() OVER () AS cartodb_id,
                 the_geom,
                 geom_refs,
                 ST_TRANSFORM(the_geom, 3857) the_geom_webmercator
          FROM OBS_GetBoundariesByGeometry(
            ST_GeomFromText('POLYGON((-179.4 -15,-179.4 71.7,179.999 71.7,179.999 -15,-179.4 -15))', 4326),
            'us.census.tiger.block'
          )

   .. tab:: {"tab_name": "Boundaries by identifier in another table"}

      Update the boundaries in another table matching the table's ID column.

      .. code-block:: postgresql

          WITH data AS (
            SELECT <geo_id> AS id
            FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_MakeEnvelope(-179, 89, 179, -89, 4326),
              '[{"geom_id": "us.census.tiger.block"}]'
            ) meta
          )
          UPDATE <table_to_update> SET
                the_geom = (data->0->>'value')::Geometry,
                the_geom_webmercator = ST_Transform((data->0->>'value')::Geometry, 3857)
          FROM OBS_GetData(
                (SELECT Array_agg(id) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.<geo_id> = obs_data.id

      Obtain boundaries matched to another table's ID column.

      .. code-block:: postgresql

          WITH ids AS (
            SELECT ARRAY_AGG(<geo_id>) ids
            FROM <table_with_ids>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_MakeEnvelope(-179, 89, 179, -89, 4326),
              '[{"geom_id": "us.census.tiger.block"}]'
            ) meta
          )
          SELECT ROW_NUMBER() OVER () AS cartodb_id,
                 data->0->>'geomref' as geomref,
                 (data->0->>'value')::Geometry as the_geom,
                 ST_Transform((data->0->>'value')::Geometry, 3857) AS the_geom_webmercator
          FROM OBS_GetData((SELECT ids FROM ids), (SELECT meta FROM meta))









Source
~~~~~~
    
      * :ref:`us.census.tiger.tiger-source`
    


Time (default is latest)
~~~~~~~~~~~~~~~~~~~~~~~~
  
      * 2015
  


License
~~~~~~~
    
      * :ref:`tags.no-restrictions`
    