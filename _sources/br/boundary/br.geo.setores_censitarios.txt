.. _br.geo.setores_censitarios:

Census tracts
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------













.. tabs::

   .. tab:: {"tab_name": "Boundaries within polygon"}
      Insert all  "Census tracts" geometries into another table:

      .. code-block:: postgresql

          INSERT INTO <table_to_update> (cartodb_id, the_geom, name, the_geom_webmercator)
          SELECT ROW_NUMBER() OVER () AS cartodb_id,
                 the_geom,
                 geom_refs,
                 ST_TRANSFORM(the_geom, 3857) the_geom_webmercator
          FROM OBS_GetBoundariesByGeometry(
            ST_GeomFromText('POLYGON((-74.4 -33.9,-74.4 5.7,-34.5 5.7,-34.5 -33.9,-74.4 -33.9))', 4326),
            'br.geo.setores_censitarios'
          )

   .. tab:: {"tab_name": "Boundaries by identifier in another table"}

      Update the boundaries in another table matching the table's ID column.

      .. code-block:: postgresql

          WITH data AS (
            SELECT <geo_id> AS id
            FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_MakeEnvelope(-179, 89, 179, -89, 4326),
              '[{"geom_id": "br.geo.setores_censitarios"}]'
            ) meta
          )
          UPDATE <table_to_update> SET
                the_geom = (data->0->>'value')::Geometry,
                the_geom_webmercator = ST_Transform((data->0->>'value')::Geometry, 3857)
          FROM OBS_GetData(
                (SELECT Array_agg(id) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.<geo_id> = obs_data.id

      Obtain boundaries matched to another table's ID column.

      .. code-block:: postgresql

          WITH ids AS (
            SELECT ARRAY_AGG(<geo_id>) ids
            FROM <table_with_ids>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_MakeEnvelope(-179, 89, 179, -89, 4326),
              '[{"geom_id": "br.geo.setores_censitarios"}]'
            ) meta
          )
          SELECT ROW_NUMBER() OVER () AS cartodb_id,
                 data->0->>'geomref' as geomref,
                 (data->0->>'value')::Geometry as the_geom,
                 ST_Transform((data->0->>'value')::Geometry, 3857) AS the_geom_webmercator
          FROM OBS_GetData((SELECT ids FROM ids), (SELECT meta FROM meta))









Source
~~~~~~
    
      * Not available
    


Time (default is latest)
~~~~~~~~~~~~~~~~~~~~~~~~
  
      * 2010
  


License
~~~~~~~
    
      * Not available
    