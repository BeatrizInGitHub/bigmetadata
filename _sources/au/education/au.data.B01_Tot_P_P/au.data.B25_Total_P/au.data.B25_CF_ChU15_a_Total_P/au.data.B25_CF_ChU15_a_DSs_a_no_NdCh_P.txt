.. _au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P:

Couple family with children under 15 and dependent students and no non dependent children (Persons)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Family Composition











.. tabs::



   
   .. tab:: {"tab_name": "Per Couple family with children under 15 and Total (Persons)"}

      Update a field of a table with an estimate of "Couple family with children under 15 and dependent students and no non dependent children (Persons)" per Couple family with children under 15 and Total (Persons) for a polygon
      using a combination of weighting by area and Couple family with children under 15 and Total (Persons).

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P",
              "denom_id": "au.data.B25_CF_ChU15_a_Total_P",
              "normalization": "denominated"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Couple family with children under 15 and dependent students and no non dependent children (Persons)" per Couple family with children under 15 and Total (Persons) for a polygon
      using a combination of weighting by area and Couple family with children under 15 and Total (Persons).

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(151.213, -33.88), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P",
               "denom_id": "au.data.B25_CF_ChU15_a_Total_P",
               "normalization": "denominated"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS b25_cf_chu15_a_dss_a_no_ndch_p_rate_2011
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))

   




   .. tab:: {"tab_name": "Per sq km"}

      Update a field of a table with an estimate of "Couple family with children under 15 and dependent students and no non dependent children (Persons)" per square kilometer using area
      weighted interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P",
              "normalization": "areaNormalized"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Couple family with children under 15 and dependent students and no non dependent children (Persons)" per square kilometer using area
      weighted interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(151.213, -33.88), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P",
               "normalization": "areaNormalized"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS b25_cf_chu15_a_dss_a_no_ndch_p_per_sq_km_2011
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))

   .. tab:: {"tab_name": "Raw count"}

      Update a field of a table with an estimate of "Couple family with children under 15 and dependent students and no non dependent children (Persons)" for a polygon using area-weighted
      interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P",
              "normalization": "predenominated"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Couple family with children under 15 and dependent students and no non dependent children (Persons)" for a polygon using area-weighted
      interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(151.213, -33.88), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B25_CF_ChU15_a_DSs_a_no_NdCh_P",
               "normalization": "predenominated"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS b25_cf_chu15_a_dss_a_no_ndch_p_2011
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))









Boundaries
~~~~~~~~~~

.. raw:: html

  <table border="1" class="docutils">
  <thead valign="bottom">
  <tr class="row-odd"><th class="head">Boundary</th>
  <th class="head">Time (default is latest)</th>
  </tr>
  </thead>
  <tbody valign="top">


  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SUA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA1`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.GCCSA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.POA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.RA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA4`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.CED`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SOSR`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SLA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA3`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.STE`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.UCL`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SED`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.LGA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SOS`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA2`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SSC`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  

.. raw:: html

  </tr>
  </tbody>
  </table>




Related columns
~~~~~~~~~~~~~~~
    
      * :ref:`au.data.B25_CF_ChU15_a_Total_P`
    



Source
~~~~~~
    
      * :ref:`au.geo.au-census`
    



License
~~~~~~~
    
      * :ref:`au.geo.au-datapacks-license`
    