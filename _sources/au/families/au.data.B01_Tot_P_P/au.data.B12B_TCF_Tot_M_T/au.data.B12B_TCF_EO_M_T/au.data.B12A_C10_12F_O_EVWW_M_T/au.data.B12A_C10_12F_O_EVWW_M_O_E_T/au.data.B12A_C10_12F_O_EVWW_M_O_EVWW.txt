.. _au.data.B12A_C10_12F_O_EVWW_M_O_EVWW:

Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Proficiency in Spoken English/Language of Parents of Dependent Children











.. tabs::



   
   .. tab:: {"tab_name": "Per Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Total"}

      Update a field of a table with an estimate of "Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well" per Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Total for a polygon
      using a combination of weighting by area and Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Total.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B12A_C10_12F_O_EVWW_M_O_EVWW",
              "denom_id": "au.data.B12A_C10_12F_O_EVWW_M_O_E_T",
              "normalization": "denominated"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well" per Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Total for a polygon
      using a combination of weighting by area and Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Total.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(151.213, -33.88), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B12A_C10_12F_O_EVWW_M_O_EVWW",
               "denom_id": "au.data.B12A_C10_12F_O_EVWW_M_O_E_T",
               "normalization": "denominated"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS b12a_c10_12f_o_evww_m_o_evww_rate_2011
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))

   




   .. tab:: {"tab_name": "Per sq km"}

      Update a field of a table with an estimate of "Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well" per square kilometer using area
      weighted interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B12A_C10_12F_O_EVWW_M_O_EVWW",
              "normalization": "areaNormalized"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well" per square kilometer using area
      weighted interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(151.213, -33.88), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B12A_C10_12F_O_EVWW_M_O_EVWW",
               "normalization": "areaNormalized"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS b12a_c10_12f_o_evww_m_o_evww_per_sq_km_2011
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))

   .. tab:: {"tab_name": "Raw count"}

      Update a field of a table with an estimate of "Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well" for a polygon using area-weighted
      interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT cartodb_id AS id, the_geom FROM <table_to_update>
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B12A_C10_12F_O_EVWW_M_O_EVWW",
              "normalization": "predenominated"}]'
            , 1, 1) meta
          FROM data)
          UPDATE <table_to_update> SET <field_to_update> = (data->0->>'value')::Numeric
          FROM OBS_GetData(
                (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                (SELECT meta FROM meta)) obs_data
          WHERE <table_to_update>.cartodb_id = obs_data.id

      Obtain an estimate of "Dependent children aged 10-12 years female parent Speaks other language and speaks English Very well or well male parent Speaks other language and speaks English Very well or well" for a polygon using area-weighted
      interpolation.

      .. code-block:: postgresql

          WITH data AS (
            SELECT 1 AS id,
            ST_Buffer(ST_SetSRID(ST_Point(151.213, -33.88), 4326), 0.01) the_geom
          ),
          meta AS (
            SELECT OBS_GetMeta(ST_SetSRID(ST_Extent(the_geom), 4326),
            '[{"numer_id": "au.data.B12A_C10_12F_O_EVWW_M_O_EVWW",
               "normalization": "predenominated"}]'
            , 1, 1) meta
          FROM data)
          SELECT id, (data->0->>'value')::Numeric AS b12a_c10_12f_o_evww_m_o_evww_2011
          FROM OBS_GetData(
                 (SELECT ARRAY_AGG((the_geom, id)::geomval) FROM data),
                 (SELECT meta FROM meta))









Boundaries
~~~~~~~~~~

.. raw:: html

  <table border="1" class="docutils">
  <thead valign="bottom">
  <tr class="row-odd"><th class="head">Boundary</th>
  <th class="head">Time (default is latest)</th>
  </tr>
  </thead>
  <tbody valign="top">


  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SUA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA1`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.GCCSA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.POA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.RA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA4`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.CED`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SOSR`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SLA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA3`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.STE`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.UCL`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SED`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.LGA`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SOS`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SA2`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  
.. raw:: html

  <tr class="row-even"><td>

:ref:`au.geo.SSC`

.. raw:: html

  </td>
  <td>

2011

.. raw:: html

  </td>

  

.. raw:: html

  </tr>
  </tbody>
  </table>




Related columns
~~~~~~~~~~~~~~~
    
      * :ref:`au.data.B12A_C10_12F_O_EVWW_M_O_E_T`
    



Source
~~~~~~
    
      * :ref:`au.geo.au-census`
    



License
~~~~~~~
    
      * :ref:`au.geo.au-datapacks-license`
    